// notifications.js - –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
class NotificationManager {
    constructor() {
        this.lastProximityNotification = 0;
        this.proximityCooldown = 30000; // 30 —Å–µ–∫—É–Ω–¥
        this.init();
    }

    async init() {
        await this.requestPermission();
        this.setupProximityAlerts();
    }

    async requestPermission() {
        if (!('Notification' in window)) return false;
        
        if (Notification.permission === 'default') {
            return await Notification.requestPermission() === 'granted';
        }
        
        return Notification.permission === 'granted';
    }

    setupProximityAlerts() {
        // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –∏–∑ –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ–∑–∏—Ü–∏–∏
        window.monitorProximity = (distance, coordinates) => {
            if (!window.appSettings.settings.proximityAlert) return;
            
            const alertDistance = window.appSettings.settings.proximityDistance;
            const now = Date.now();
            
            if (distance <= alertDistance && 
                now - this.lastProximityNotification > this.proximityCooldown) {
                
                this.showProximityAlert(distance, coordinates);
                this.lastProximityNotification = now;
            }
        };
    }

    showProximityAlert(distance, coordinates) {
        const distanceText = window.appSettings.convertDistance(distance).text;
        const title = 'üéØ –ü—Ä–∏–±–ª–∏–∂–∞–µ—Ç–µ—Å—å –∫ –º–∞—è–∫—É!';
        const body = `–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: ${distanceText}`;

        // –ì–æ–ª–æ—Å–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        if (window.voiceGuide && window.appSettings.settings.voiceGuidance) {
            window.voiceGuide.speak(`–í–Ω–∏–º–∞–Ω–∏–µ! –ú–∞—è–∫ –±–ª–∏–∑–∫–æ, ${distanceText}`, 'high');
        }

        // Browser notification
        if (window.appSettings.settings.notifications) {
            window.appSettings.showNotification(title, {
                body: body,
                tag: 'proximity-alert',
                requireInteraction: true
            });
        }

        // –í–∏–±—Ä–∞—Ü–∏—è (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞)
        if (navigator.vibrate) {
            navigator.vibrate([200, 100, 200]);
        }

        // –í–∏–∑—É–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
        this.showVisualAlert(distance);
    }

    showVisualAlert(distance) {
        // –°–æ–∑–¥–∞–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ UI
        const alert = document.createElement('div');
        alert.className = 'proximity-alert';
        alert.innerHTML = `
            <div class="alert-content">
                <span class="alert-icon">üéØ</span>
                <div class="alert-text">
                    <strong>–ë–ª–∏–∑–∫–æ –∫ –º–∞—è–∫—É!</strong>
                    <div>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: ${window.appSettings.convertDistance(distance).text}</div>
                </div>
                <button class="alert-close">&times;</button>
            </div>
        `;

        alert.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: #ff6b6b;
            color: white;
            padding: 15px;
            border-radius: 10px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.3);
            z-index: 10000;
            max-width: 300px;
            animation: slideIn 0.3s ease-out;
        `;

        const style = document.createElement('style');
        style.textContent = `
            @keyframes slideIn {
                from { transform: translateX(100%); opacity: 0; }
                to { transform: translateX(0); opacity: 1; }
            }
            .proximity-alert .alert-content {
                display: flex;
                align-items: center;
                gap: 10px;
            }
            .proximity-alert .alert-close {
                background: none;
                border: none;
                color: white;
                font-size: 20px;
                cursor: pointer;
                padding: 0;
                width: 24px;
                height: 24px;
            }
        `;

        document.head.appendChild(style);
        document.body.appendChild(alert);

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–Ω–æ–ø–∫–µ
        alert.querySelector('.alert-close').onclick = () => {
            alert.remove();
        };

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            if (alert.parentNode) {
                alert.remove();
            }
        }, 5000);
    }

    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏/–æ—Ç–∫–ª—é—á–µ–Ω–∏–∏
    showConnectionNotification(isConnected, deviceName = '') {
        if (!window.appSettings.settings.notifications) return;

        const title = isConnected ? 'üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –º–∞—è–∫—É' : 'üî¥ –û—Ç–∫–ª—é—á–µ–Ω–æ –æ—Ç –º–∞—è–∫–∞';
        const body = isConnected ? `–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: ${deviceName}` : '–ü–æ—Ç–µ—Ä—è–Ω–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ';

        window.appSettings.showNotification(title, { body });
    }

    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∏–∑–∫–æ–º –∑–∞—Ä—è–¥–µ
    showBatteryAlert(level) {
        if (level <= 20) {
            const title = 'üîã –ù–∏–∑–∫–∏–π –∑–∞—Ä—è–¥ –±–∞—Ç–∞—Ä–µ–∏';
            const body = `–£—Ä–æ–≤–µ–Ω—å –∑–∞—Ä—è–¥–∞: ${level}%`;

            if (window.appSettings.settings.notifications) {
                window.appSettings.showNotification(title, { body });
            }

            if (window.voiceGuide && window.appSettings.settings.voiceGuidance) {
                window.voiceGuide.speak(`–í–Ω–∏–º–∞–Ω–∏–µ! –ù–∏–∑–∫–∏–π –∑–∞—Ä—è–¥ –±–∞—Ç–∞—Ä–µ–∏, ${level} –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤`, 'high');
            }
        }
    }

    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–µ
    showNewCoordinateAlert(coordinate) {
        if (!window.appSettings.settings.notifications) return;

        const title = 'üìç –ü–æ–ª—É—á–µ–Ω—ã –Ω–æ–≤—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã';
        const body = `–®: ${coordinate.lat.toFixed(6)}, –î: ${coordinate.lon.toFixed(6)}`;

        window.appSettings.showNotification(title, { body, icon: '/icons/map-icon.png' });
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
window.notificationManager = new NotificationManager();
